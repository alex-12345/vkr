security:
    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        jwt:
            lexik_jwt:
                class: App\Security\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/api/auth/login
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path:               /api/auth/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        anonymous_pages:
            pattern: ^/api/(auth/token/refresh|workspace/info|users/admin|invites/([0-9]+)/status)
            stateless: true
            anonymous: true
        api:
            pattern:   ^/api
            stateless: true
            provider: jwt
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: lazy
            provider: app_user_provider


    access_control:
        - { path: ^/api/auth/(login|token/refresh), roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/(workspace/info|invites/([0-9]+)/status), roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users/admin, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: ROLE_USER }
    role_hierarchy:
            ROLE_MODERATOR: [ROLE_USER]
            ROLE_ADMIN: [ROLE_MODERATOR]
            ROLE_SUPER_ADMIN: [ROLE_ADMIN]
